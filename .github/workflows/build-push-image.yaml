# https://docs.docker.com/build/ci/github-actions/multi-platform/
name: Create and publish a Docker image to GitHub Container Registry
 
on:
  push:
    branches: ['main']
    paths:
      - '!.github/**'
      - '*'

env:
  REGISTRY: ghcr.io
  OWNER_NAME: ${{ github.repository_owner }}
  PLATFORMS: linux/amd64,linux/arm64
  APP_NAME: toolbox
  VERSION: alpine-3.20
 
jobs:
  build-platform-images:
    name: Build multi-platform image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) from Container
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.OWNER_NAME }}/${{ env.APP_NAME }}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ${{ env.APP_NAME }}
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.OWNER_NAME }}/${{ env.APP_NAME }}:latest,${{ env.REGISTRY }}/${{ env.OWNER_NAME }}/${{ env.APP_NAME }}:${{ env.VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
          #outputs: type=image,name=${{ env.REGISTRY }}/${{ env.OWNER_NAME }}/${{ env.APP_NAME }},push-by-digest=true,name-canonical=true,push=true
          #outputs: type=image,name=${{ env.REGISTRY }}/${{ env.OWNER_NAME }}/${{ env.APP_NAME }},push-by-digest=false,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.APP_NAME }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1