name: Build and publish Image
 
on:
  workflow_call:
    inputs:
      registry:
        required: false
        type: string
        #default: ghcr.io
      owner:
        required: false
        type: string
        #default: ${{ github.repository_owner }}
  workflow_dispatch:
    inputs:
      registry:
        required: false
        type: string
        description: 'Registry to be used (default: ghcr.io)'
        #default: ghcr.io
      owner:
        required: false
        type: string
        description: 'Registry to be used (default: repo owner)'
        #default: ${{ github.repository_owner }}

env:
  registry: ${{ inputs.registry == null && 'ghcr.io' || inputs.registry }}
  owner: ${{ inputs.owner == null && '${{ github.repository_owner }}' || inputs.owner }}
  platforms: linux/amd64,linux/arm64
  app: toolbox
  version: alpine-3.20
 
jobs:
  # https://docs.docker.com/build/ci/github-actions/multi-platform/
  build-platform-images:
    name: Build multi-platform image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - run: echo "${{ env.registry }},${{ env.owner }}"
      #- name: Checkout repository
      #  uses: actions/checkout@v4
#
      #- name: Set up QEMU
      #  uses: docker/setup-qemu-action@v3
#
      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v3
#
      #- name: Log in to the Container registry
      #  uses: docker/login-action@v3
      #  with:
      #    registry: ${{ env.registry }}
      #    username: ${{ github.actor }}
      #    password: ${{ secrets.GITHUB_TOKEN }}
#
      #- name: Extract metadata (tags, labels) from Container
      #  id: meta
      #  uses: docker/metadata-action@v5
      #  with:
      #    images: ${{ env.registry }}/${{ env.owner }}/${{ env.app }}
#
      #- name: Build and push Docker image
      #  id: build
      #  uses: docker/build-push-action@v5
      #  with:
      #    cache-from: type=gha
      #    cache-to: type=gha,mode=max
      #    context: ${{ env.app }}
      #    platforms: ${{ env.platforms }}
      #    push: true
      #    tags: ${{ env.registry }}/${{ env.owner }}/${{ env.app }}:latest,${{ env.registry }}/${{ env.owner }}/${{ env.app }}:${{ env.version }}
      #    labels: ${{ steps.meta.outputs.labels }}
#